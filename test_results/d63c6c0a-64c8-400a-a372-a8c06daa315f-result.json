{"name": "test_case_4", "status": "failed", "statusDetails": {"message": "AssertionError: Нижняя граница поля ввода rent_name не окрашена в красный цвет или Неверное сообщение об ошибке для поля rent_name", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"34c4563289794bae7b2ca1a732bf32eb\")>\n\n    @allure.description(\"test_case_4\")\n    def test_case_4(driver):\n        Logger.add_start_step(method=\"Невозможность отправления заявки на сотрудничество, оставив все обязательные поля пустыми\")\n        path_to_screenshot = \"screen\\\\\"\n    \n        form_marker = \"Заявка на сотрудничество\"\n        rent_description = \"Цокольный этаж\"\n        errors_input_marker = \"InputBox_error\"\n        rent_name = \"name\"\n        errors_rent_name = \"Поле должно содержать минимум 2 символа\"\n        rent_phone = \"phone\"\n        errors_rent_phone = \"Поле должно содержать 11 цифр\"\n        rent_mail = \"email\"\n        errors_rent_mail = \"Поле обязательно для заполнения\"\n        rent_city = \"city\"\n        errors_rent_city = \"Поле должно содержать минимум 2 символа\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2. Ввести в поле \"Опишите особенности помещения\" значение: \"Цокольный этаж\"\n        rent_page.fill_input_rent_description(rent_description)\n        # Шаг 3.  Нажать на кнопку \"Отправить предложение\"\n        rent_page.click_button_send_application()\n        try:\n            # ОР 1. \"Ваше ФИО*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_name\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 2. Под полем ввода \"Ваше ФИО*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_name)\n            # # ОР 3. \"Контактный номер телефона*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            # current_assert_input = rent_phone\n            # rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # # ОР 4. Под полем ввода \"Контактный номер телефона*\" отображается подсказка \"Поле должно содержать 11 цифра\"\n>           rent_page.assert_errors_input_message(current_assert_input, errors_rent_phone)\n\ntest\\test_general_form_negative_checks.py:105: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x000001E005ED6FA0>, input_name = 'name', value = 'Поле должно содержать 11 цифр'\n\n    def assert_errors_input_message(self, input_name, value):\n        with allure.step(f\"Assert errors input rent {input_name} message\"):\n            Logger.add_start_step(method=f\"Assert errors input rent {input_name} message\")\n            text_errors_input_element = self.get_errors_input_element(input_name).text\n>           self.assert_element_text(text_errors_input_element, value)\n\npages\\Rent_page.py:212: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x000001E005ED6FA0>, text = 'Поле должно содержать минимум 2 символа', result = 'Поле должно содержать 11 цифр'\n\n    def assert_element_text(self, text, result):\n>       assert text == result\nE       AssertionError\n\nbase\\Base.py:28: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"34c4563289794bae7b2ca1a732bf32eb\")>\n\n    @allure.description(\"test_case_4\")\n    def test_case_4(driver):\n        Logger.add_start_step(method=\"Невозможность отправления заявки на сотрудничество, оставив все обязательные поля пустыми\")\n        path_to_screenshot = \"screen\\\\\"\n    \n        form_marker = \"Заявка на сотрудничество\"\n        rent_description = \"Цокольный этаж\"\n        errors_input_marker = \"InputBox_error\"\n        rent_name = \"name\"\n        errors_rent_name = \"Поле должно содержать минимум 2 символа\"\n        rent_phone = \"phone\"\n        errors_rent_phone = \"Поле должно содержать 11 цифр\"\n        rent_mail = \"email\"\n        errors_rent_mail = \"Поле обязательно для заполнения\"\n        rent_city = \"city\"\n        errors_rent_city = \"Поле должно содержать минимум 2 символа\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2. Ввести в поле \"Опишите особенности помещения\" значение: \"Цокольный этаж\"\n        rent_page.fill_input_rent_description(rent_description)\n        # Шаг 3.  Нажать на кнопку \"Отправить предложение\"\n        rent_page.click_button_send_application()\n        try:\n            # ОР 1. \"Ваше ФИО*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_name\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 2. Под полем ввода \"Ваше ФИО*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_name)\n            # # ОР 3. \"Контактный номер телефона*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            # current_assert_input = rent_phone\n            # rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # # ОР 4. Под полем ввода \"Контактный номер телефона*\" отображается подсказка \"Поле должно содержать 11 цифра\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_phone)\n            # # ОР 5. \"Email  для ответа*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            # current_assert_input = rent_mail\n            # rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # # ОР 6. Под полем ввода \"Email  для ответа*\" отображается подсказка \"Поле обязательно для заполнения\"\n            # current_assert_input = rent_mail\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_mail)\n            # ОР 7. \"Введите город и область*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_city\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker+\"\")\n            # ОР 8. Под полем ввода \"Введите город и область*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_city)\n        except AssertionError:\n            print(f\"Нижняя граница поля ввода rent_{current_assert_input} не окрашена в красный цвет или \"\n                  f\"Неверное сообщение об ошибке для поля rent_{current_assert_input}\")\n>           raise AssertionError(f\"Нижняя граница поля ввода rent_{current_assert_input} не окрашена в красный цвет или \"\n                  f\"Неверное сообщение об ошибке для поля rent_{current_assert_input}\")\nE           AssertionError: Нижняя граница поля ввода rent_name не окрашена в красный цвет или Неверное сообщение об ошибке для поля rent_name\n\ntest\\test_general_form_negative_checks.py:120: AssertionError"}, "description": "test_case_4", "steps": [{"name": "Open page on https://www.citilink.ru/rent/", "status": "passed", "start": 1676820194697, "stop": 1676820196162}, {"name": "Open rent form", "status": "passed", "start": 1676820196162, "stop": 1676820196325}, {"name": "Input rent description", "status": "passed", "start": 1676820196325, "stop": 1676820196449}, {"name": "Input rent phone", "status": "passed", "start": 1676820196449, "stop": 1676820196518}, {"name": "Assert class input rent name contains 'InputBox_error'", "status": "passed", "start": 1676820196518, "stop": 1676820196549}, {"name": "Assert errors input rent name message", "status": "passed", "start": 1676820196549, "stop": 1676820196582}, {"name": "Assert errors input rent name message", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\pages\\Rent_page.py\", line 212, in assert_errors_input_message\n    self.assert_element_text(text_errors_input_element, value)\n  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\base\\Base.py\", line 28, in assert_element_text\n    assert text == result\n"}, "start": 1676820196582, "stop": 1676820196604}], "attachments": [{"name": "stdout", "source": "15469e1b-6e5b-4bb9-af94-9ec67162de3f-attachment.txt", "type": "text/plain"}], "start": 1676820194696, "stop": 1676820196848, "uuid": "cc1d4e08-c958-4532-99ee-9a02c766e7d3", "historyId": "178c24a463153a9c64a5d15dbd6f5d1d", "testCaseId": "42a20844a3080811c3d678f83a87d352", "fullName": "test.test_general_form_negative_checks#test_case_4", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_general_form_negative_checks"}, {"name": "host", "value": "DESKTOP-NUHQ5FA"}, {"name": "thread", "value": "24348-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_general_form_negative_checks"}]}