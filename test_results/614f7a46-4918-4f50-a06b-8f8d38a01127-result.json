{"name": "test_case_3", "status": "failed", "statusDetails": {"message": "AssertionError: Нижняя граница поля ввода rent_email не окрашена в красный цвет или Неверное сообщение об ошибке для поля rent_email", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7abc08dc0c9f97de508fedff2e53d64\")>\n\n    @allure.description(\"test_case_3\")\n    def test_case_3(driver):\n        Logger.add_start_step(method=\"Невозможность отправления заявки на сотрудничество, оставив все поля пустыми\")\n        path_to_screenshot = \"screen\\\\\"\n    \n        form_marker = \"Заявка на сотрудничество\"\n        errors_input_marker = \"InputBox_error\"\n        rent_name = \"name\"\n        errors_rent_name = \"Поле должно содержать минимум 2 символа\"\n        rent_phone = \"phone\"\n        errors_rent_phone = \"Поле должно содержать 11 цифр\"\n        rent_mail = \"email\"\n        errors_rent_mail = \"Поле обязательно для заполнения\"\n        rent_city = \"city\"\n        errors_rent_city = \"Поле должно содержать минимум 2 символа\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2.  Нажать на кнопку \"Отправить предложение\"\n        rent_page.click_button_send_application()\n        try:\n            # ОР 1. \"Ваше ФИО*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_name\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 2. Под полем ввода \"Ваше ФИО*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_name)\n            # ОР 3. \"Контактный номер телефона*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_phone\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 4. Под полем ввода \"Контактный номер телефона*\" отображается подсказка \"Поле должно содержать 11 цифра\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_phone)\n            # ОР 5. \"Email  для ответа*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_mail\n>           rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n\ntest\\test_general_form_negative_checks.py:46: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x000001B8B89DA970>, input_name = 'email', value = 'InputBox_error'\n\n    def assert_class_contains_str(self, input_name, value):\n        with allure.step(f\"Assert class input rent {input_name} contains '{value}'\"):\n            Logger.add_start_step(method=f\"Assert class input rent {input_name} contains '{value}'\")\n            wrapper_input_element = self.get_wrapper_input_element(input_name)\n            class_wrapper_input_element = wrapper_input_element.get_attribute(\"class\")\n>           self.assert_class_contains(class_wrapper_input_element, value)\n\npages\\Rent_page.py:219: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x000001B8B89DA970>, class_value = 'InputBox js--InputBox InputBox_full-width InputBox_has-label', sub_str = 'InputBox_error'\n\n    def assert_class_contains(self, class_value, sub_str):\n>       assert sub_str in class_value\nE       AssertionError\n\nbase\\Base.py:30: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f7abc08dc0c9f97de508fedff2e53d64\")>\n\n    @allure.description(\"test_case_3\")\n    def test_case_3(driver):\n        Logger.add_start_step(method=\"Невозможность отправления заявки на сотрудничество, оставив все поля пустыми\")\n        path_to_screenshot = \"screen\\\\\"\n    \n        form_marker = \"Заявка на сотрудничество\"\n        errors_input_marker = \"InputBox_error\"\n        rent_name = \"name\"\n        errors_rent_name = \"Поле должно содержать минимум 2 символа\"\n        rent_phone = \"phone\"\n        errors_rent_phone = \"Поле должно содержать 11 цифр\"\n        rent_mail = \"email\"\n        errors_rent_mail = \"Поле обязательно для заполнения\"\n        rent_city = \"city\"\n        errors_rent_city = \"Поле должно содержать минимум 2 символа\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2.  Нажать на кнопку \"Отправить предложение\"\n        rent_page.click_button_send_application()\n        try:\n            # ОР 1. \"Ваше ФИО*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_name\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 2. Под полем ввода \"Ваше ФИО*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_name)\n            # ОР 3. \"Контактный номер телефона*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_phone\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 4. Под полем ввода \"Контактный номер телефона*\" отображается подсказка \"Поле должно содержать 11 цифра\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_phone)\n            # ОР 5. \"Email  для ответа*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_mail\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker)\n            # ОР 6. Под полем ввода \"Email  для ответа*\" отображается подсказка \"Поле обязательно для заполнения\"\n            current_assert_input = rent_mail\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_mail)\n            # ОР 7. \"Введите город и область*\": лейбл поля, нижняя граница поля ввода окрашены в красный цвет.\n            current_assert_input = rent_city\n            rent_page.assert_class_contains_str(current_assert_input, errors_input_marker+\"\")\n            # ОР 8. Под полем ввода \"Введите город и область*\" отображается подсказка \"Поле должно содержать минимум 2 символа\"\n            rent_page.assert_errors_input_message(current_assert_input, errors_rent_city)\n        except AssertionError:\n            print(f\"Нижняя граница поля ввода rent_{current_assert_input} не окрашена в красный цвет или \"\n                  f\"Неверное сообщение об ошибке для поля rent_{current_assert_input}\")\n>           raise AssertionError(f\"Нижняя граница поля ввода rent_{current_assert_input} не окрашена в красный цвет или \"\n                  f\"Неверное сообщение об ошибке для поля rent_{current_assert_input}\")\nE           AssertionError: Нижняя граница поля ввода rent_email не окрашена в красный цвет или Неверное сообщение об ошибке для поля rent_email\n\ntest\\test_general_form_negative_checks.py:58: AssertionError"}, "description": "test_case_3", "steps": [{"name": "Open page on https://www.citilink.ru/rent/", "status": "passed", "start": 1676820225778, "stop": 1676820227904}, {"name": "Open rent form", "status": "passed", "start": 1676820227904, "stop": 1676820228105}, {"name": "Input rent phone", "status": "passed", "start": 1676820228105, "stop": 1676820228255}, {"name": "Assert class input rent name contains 'InputBox_error'", "status": "passed", "start": 1676820228255, "stop": 1676820228294}, {"name": "Assert errors input rent name message", "status": "passed", "start": 1676820228294, "stop": 1676820228329}, {"name": "Assert class input rent phone contains 'InputBox_error'", "status": "passed", "start": 1676820228330, "stop": 1676820228365}, {"name": "Assert errors input rent phone message", "status": "passed", "start": 1676820228365, "stop": 1676820228403}, {"name": "Assert class input rent email contains 'InputBox_error'", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\pages\\Rent_page.py\", line 219, in assert_class_contains_str\n    self.assert_class_contains(class_wrapper_input_element, value)\n  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\base\\Base.py\", line 30, in assert_class_contains\n    assert sub_str in class_value\n"}, "start": 1676820228403, "stop": 1676820228435}], "attachments": [{"name": "stdout", "source": "bb007646-df9b-4437-8c75-fdf915404ad2-attachment.txt", "type": "text/plain"}], "start": 1676820225778, "stop": 1676820228701, "uuid": "8c0f7c4e-1f93-4121-8090-65c5378cb370", "historyId": "f9e04a8be24189be1173f711351f415a", "testCaseId": "e0a184358b546237057e5c085f11ea54", "fullName": "test.test_general_form_negative_checks#test_case_3", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_general_form_negative_checks"}, {"name": "host", "value": "DESKTOP-NUHQ5FA"}, {"name": "thread", "value": "12052-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_general_form_negative_checks"}]}