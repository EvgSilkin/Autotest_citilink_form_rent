{"name": "test_case_48", "status": "failed", "statusDetails": {"message": "AssertionError: Ошибка при проверки поля rent_city", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b57008c36f153f5f66575572ae72fa69\")>\n\n    @allure.description(\"test_case_48\")\n    def test_case_48(driver):\n        Logger.add_start_step(method=\"Сохранение заполненных данных в форме, после изменения выбранной площади\")\n        path_to_screenshot = \"screen\\\\\"\n        value_for_assert = \"RentFeedback____inner feedback-radio feedback-radio-less active\"\n        form_marker = \"Заявка на сотрудничество\"\n        rent_name = \"Иванов Иван Иванович\"\n        rent_phone = \"9123456789\"\n        rent_mail = \"test@test.ru\"\n        rent_city = \"Казань Татарстан\"\n        rent_description = \"Цокольный этаж\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2. Ввести в поле \"Ваше ФИО*\" значение: \"Иванов Иван Иванович\"\"\n        rent_page.fill_input_rent_name(rent_name)\n        # Шаг 3. Ввести в поле \"Контактный номер телефона*\" значение: \"+79123456789\"\n        rent_page.fill_input_rent_phone(rent_phone)\n        # Шаг 4. Ввести в поле \"Email для ответа*\" значение: \"test@test.ru\"\n        rent_page.fill_input_rent_mail(rent_mail)\n        # Шаг 5. Ввести в поле \"Введите город и область*\" значение: \"Казань Татарстан\"\n        rent_page.fill_input_rent_city(rent_city)\n        # Шаг 6. Ввести в поле \"Опишите особенности помещения\" значение: \"Цокольный этаж\"\n        rent_page.fill_input_rent_description(rent_description)\n        # Шаг 7. Нажать на таб-кнопку \"Меньше 40М2\"\n        rent_page.change_form_to_area_less_40_metres(value_for_assert)\n        try:\n            # ОР 1:  Сохранились заполненные значения для поля: \"Ваше ФИО*\"\n            current_assert_input = \"rent_name\"\n            rent_page.get_and_assert_input_value(current_assert_input, rent_name)\n            # ОР 2:  Сохранились заполненные значения для поля: \"Контактный номер телефона*\"\n            current_assert_input = \"rent_phone\"\n            rent_page.get_and_assert_input_value(current_assert_input, rent_phone)\n            # ОР 3:  Сохранились заполненные значения для поля: \"Введите город и область*\"\n            current_assert_input = \"rent_city\"\n>           rent_page.get_and_assert_input_value(current_assert_input, rent_city+\"test\")\n\ntest\\test_general_form_positive_checks.py:128: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x0000028B6990B430>, input_name = 'rent_city', value = 'Казань Татарстанtest'\n\n    def get_and_assert_input_value(self, input_name, value):\n        with allure.step(f\"Get and assert {input_name}-input value\"):\n            Logger.add_start_step(method=f\"Get and assert {input_name}-input value\")\n>           self.switch_input_assert(input_name, value)\n\npages\\Rent_page.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.Rent_page.Rent_page object at 0x0000028B6990B430>, input_name = 'rent_city', value = 'Казань Татарстанtest'\n\n    def switch_input_assert(self, input_name, value):\n        dict_inputs = {\n            'rent_name': self.get_input_rent_name,\n            'rent_phone': self.get_input_rent_phone,\n            'rent_mail': self.get_input_rent_mail,\n            'rent_city': self.get_input_rent_city,\n            'rent_description': self.get_input_rent_description\n        }\n        input_item = dict_inputs.get(input_name)\n        value_input_item = input_item().get_attribute(\"value\")\n        if input_name == \"rent_phone\":\n            value_input_item = self.clear_phone_value(value_input_item)\n>       assert value == value_input_item\nE       AssertionError\n\npages\\Rent_page.py:88: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"b57008c36f153f5f66575572ae72fa69\")>\n\n    @allure.description(\"test_case_48\")\n    def test_case_48(driver):\n        Logger.add_start_step(method=\"Сохранение заполненных данных в форме, после изменения выбранной площади\")\n        path_to_screenshot = \"screen\\\\\"\n        value_for_assert = \"RentFeedback____inner feedback-radio feedback-radio-less active\"\n        form_marker = \"Заявка на сотрудничество\"\n        rent_name = \"Иванов Иван Иванович\"\n        rent_phone = \"9123456789\"\n        rent_mail = \"test@test.ru\"\n        rent_city = \"Казань Татарстан\"\n        rent_description = \"Цокольный этаж\"\n        current_assert_input = \"\"\n    \n        rent_page = Rent_page(driver)\n        rent_page.open_page()\n        # Шаг 1. Нажать кнопку \"Оставить заявку\"\n        rent_page.open_rent_form(form_marker)\n        # Шаг 2. Ввести в поле \"Ваше ФИО*\" значение: \"Иванов Иван Иванович\"\"\n        rent_page.fill_input_rent_name(rent_name)\n        # Шаг 3. Ввести в поле \"Контактный номер телефона*\" значение: \"+79123456789\"\n        rent_page.fill_input_rent_phone(rent_phone)\n        # Шаг 4. Ввести в поле \"Email для ответа*\" значение: \"test@test.ru\"\n        rent_page.fill_input_rent_mail(rent_mail)\n        # Шаг 5. Ввести в поле \"Введите город и область*\" значение: \"Казань Татарстан\"\n        rent_page.fill_input_rent_city(rent_city)\n        # Шаг 6. Ввести в поле \"Опишите особенности помещения\" значение: \"Цокольный этаж\"\n        rent_page.fill_input_rent_description(rent_description)\n        # Шаг 7. Нажать на таб-кнопку \"Меньше 40М2\"\n        rent_page.change_form_to_area_less_40_metres(value_for_assert)\n        try:\n            # ОР 1:  Сохранились заполненные значения для поля: \"Ваше ФИО*\"\n            current_assert_input = \"rent_name\"\n            rent_page.get_and_assert_input_value(current_assert_input, rent_name)\n            # ОР 2:  Сохранились заполненные значения для поля: \"Контактный номер телефона*\"\n            current_assert_input = \"rent_phone\"\n            rent_page.get_and_assert_input_value(current_assert_input, rent_phone)\n            # ОР 3:  Сохранились заполненные значения для поля: \"Введите город и область*\"\n            current_assert_input = \"rent_city\"\n            rent_page.get_and_assert_input_value(current_assert_input, rent_city+\"test\")\n        except AssertionError:\n            print(f\"Ошибка при проверки поля {current_assert_input}\")\n>           raise AssertionError(f\"Ошибка при проверки поля {current_assert_input}\")\nE           AssertionError: Ошибка при проверки поля rent_city\n\ntest\\test_general_form_positive_checks.py:131: AssertionError"}, "description": "test_case_48", "steps": [{"name": "Open page on https://www.citilink.ru/rent/", "status": "passed", "start": 1676799902674, "stop": 1676799905889}, {"name": "Open rent form", "status": "passed", "start": 1676799905890, "stop": 1676799906126}, {"name": "Input rent name", "status": "passed", "start": 1676799906126, "stop": 1676799906417}, {"name": "Input rent phone", "status": "passed", "start": 1676799906417, "stop": 1676799906758}, {"name": "Input rent mail", "status": "passed", "start": 1676799906758, "stop": 1676799906994}, {"name": "Input rent city", "status": "passed", "start": 1676799906994, "stop": 1676799907211}, {"name": "Input rent description", "status": "passed", "start": 1676799907211, "stop": 1676799907440}, {"name": "Change form to area less 40 metres", "status": "passed", "start": 1676799907440, "stop": 1676799907658}, {"name": "Get and assert rent_name-input value", "status": "passed", "start": 1676799907658, "stop": 1676799907708}, {"name": "Get and assert rent_phone-input value", "status": "passed", "start": 1676799907708, "stop": 1676799907777}, {"name": "Get and assert rent_city-input value", "status": "failed", "statusDetails": {"message": "AssertionError\n", "trace": "  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\pages\\Rent_page.py\", line 163, in get_and_assert_input_value\n    self.switch_input_assert(input_name, value)\n  File \"D:\\IT\\QA\\Auto\\Python\\Autotest_citilink_form_rent\\pages\\Rent_page.py\", line 88, in switch_input_assert\n    assert value == value_input_item\n"}, "start": 1676799907777, "stop": 1676799907826}], "attachments": [{"name": "stdout", "source": "939ce736-1d1a-4d91-b8b4-7c513d89b0f5-attachment.txt", "type": "text/plain"}], "start": 1676799902672, "stop": 1676799908166, "uuid": "395f3850-5ba3-4716-b81a-1ef3fe9e3f23", "historyId": "bc4b5603edb012dac859d161f2f76483", "testCaseId": "e0b0b7d7e93ad6350beff4bf0e495fe7", "fullName": "test.test_general_form_positive_checks#test_case_48", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_general_form_positive_checks"}, {"name": "host", "value": "DESKTOP-NUHQ5FA"}, {"name": "thread", "value": "15652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_general_form_positive_checks"}]}